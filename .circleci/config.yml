version: 2.1

orbs:
  ruby: circleci/ruby@2.1.0
  gradle: circleci/gradle@3.0.0

jobs:
  build:
    docker:
      - image: cimg/base:stable
    parameters:
      build-lane:
        type: string
        default: "beta"
      java-version:
        type: string
        default: "17"
      enforced-branch:
        type: string
        default: ""
      build-number:
        type: string
        default: "github"
      commit-increment:
        type: string
        default: "false"
      publish-build:
        type: string
        default: "true"
      upload-artifacts:
        type: string
        default: "false"
      package-name:
        type: string
      google-json-key-base64:
        type: string
        default: ""
      artifact:
        type: string
        default: "aab"
      flavor:
        type: string
        default: ""
      build-type:
        type: string
        default: "Release"
      skip-signing:
        type: string
        default: "false"
      key-store-base64:
        type: string
        default: ""
      key-store-password:
        type: string
        default: ""
      key-alias:
        type: string
        default: ""
      key-password:
        type: string
        default: ""
    environment:
      TMPDIR: /tmp
    steps:
      - checkout
      - run:
          name: Install OpenJDK 17
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
      - run:
          name: Install Node.js and NPM
          command: |
            sudo apt-get update
            sudo apt-get upgrade -y
            sudo apt install -y curl
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt install -y nodejs
            node -v
      - ruby/install:
          version: "3.1.2"
      - run:
          name: Create Google JSON file
          if: ${{ parameters.google-json-key-base64 != '' }}
          command: |
            echo << parameters.google-json-key-base64 >> | base64 -d > "${TMPDIR}/__google_credentials.json"
      - run:
          name: Create Keystore file
          if: ${{ parameters.key-store-base64 != '' }}
          command: |
            echo "${{ parameters.key-store-base64 }}" | base64 -d > "${TMPDIR}/__keystore.jks"
      - run:
          name: Install Yarn
          command: sudo npm install -g yarn
      - run:
          name: Install Expo
          command: yarn add expo
      - run:
          name: Run Fastlane
          command: |
            chmod +x .circleci/fastlane.sh
            .circleci/fastlane.sh
        environment:
          FL_BUILD_LANE: << parameters.build-lane >>
          FL_JAVA_VERSION: << parameters.java-version >>
          FL_ENFORCED_BRANCH: << parameters.enforced-branch >>
          FL_BUILD_NUMBER: << parameters.build-number >>
          FL_COMMIT_INCREMENT: << parameters.commit-increment >>
          FL_PUBLISH_BUILD: << parameters.publish-build >>
          FL_UPLOAD_ARTIFACTS: << parameters.upload-artifacts >>
          FL_PACKAGE_NAME: << parameters.package-name >>
          FL_GOOGLE_JSON_KEY_BASE64: << parameters.google-json-key-base64 >>
          FL_ARTIFACT: << parameters.artifact >>
          FL_FLAVOR: << parameters.flavor >>
          FL_BUILD_TYPE: << parameters.build-type >>
          FL_SKIP_SIGNING: << parameters.skip-signing >>
          FL_KEY_STORE_BASE64: << parameters.key-store-base64 >>
          FL_KEY_STORE_PASSWORD: << parameters.key-store-password >>

workflows:
  version: 2
  build:
    jobs:
      - build:
          build-lane: "${{ parameters.build-lane }}"
          java-version: "${{ parameters.java-version }}"
          enforced-branch: "${{ parameters.enforced-branch }}"
          build-number: "${{ parameters.build-number }}"
          commit-increment: "${{ parameters.commit-increment }}"
          publish-build: "${{ parameters.publish-build }}"
          upload-artifacts: "${{ parameters.upload-artifacts }}"
          package-name: "${{ parameters.package-name }}"
          google-json-key-base64: "${{ parameters.google-json-key-base64 }}"
          artifact: "${{ parameters.artifact }}"
          flavor: "${{ parameters.flavor }}"
          build-type: "${{ parameters.build-type }}"
          skip-signing: "${{ parameters.skip-signing }}"
          key-store-base64: "${{ parameters.key-store-base64 }}"
          key-store-password: "${{ parameters.key-store-password }}"
          key-alias: "${{ parameters.key-alias }}"
          key-password: "${{ parameters.key-password }}"
